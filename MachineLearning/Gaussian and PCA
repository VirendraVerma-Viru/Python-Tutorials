import numpy as np
import pandas as pd

dataset=pd.read_csv("Social_Network.csv")"Wine.csv"

X=dataset.iloc[:,2:4].values
y=dataset.iloc[:,4].values

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)

from sklearn.preprocessing import StandardScaler
norm=StandardScaler()
X_train=norm.fit_transform(X_train)
X_test=norm.transform(X_test)

from sklearn.decomposition import PCA
pca=PCA(n_components=None)
X_train=pca.fit_transform(X_train,y_train)
varience=pca.explaned_variance_ratio_
print(varience)

from sklearn.naive_bayes import GaussianNB
classification=GaussianNB()
classification.fit(X_train,y_train)
y_pred=classification.predict(X_test)
from sklearn.metrics import confusion_matrix



dataset=pd.read_csv("Wine.csv")
X=dataset.iloc[:,0:13].values
y=dataset.iloc[:,13].values
from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=0)
from sklearn.preprocessing import StandardScaler
norm=StandardScaler()
X_train=norm.fit_transform(X_train)
X_test=norm.transform(X_test)
from sklearn.decomposition import PCA
pca=PCA(n_components=None)
pca.fit_transform(X_train,y_train)
varience=pca.explaned_variance_ratio_
print(varience)