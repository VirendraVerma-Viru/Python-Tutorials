import tenserflow
from tensorflow.keras.models import Sequntial
from tensorflow.keras.layers import Conv2D
from tensorflow.keras.layers import MaxPooling2D
from tensorflow.keras.layers import Flatten
from tensorflow.keras.layers import Dense


from tensorflow.keras.preprocessing import imageDataGenerator
train_datagen=ImageDataGenerator(rescale=1/255,zoom_range=0.2,vertical_flif=True,horizontal_flip=True)
training_set=train_datagen.flow_from_directory('./',target_size=(64,64),class_mode="binary"
test_datagen=ImageDataGenerator(rescale=1./255)
test_set=test_datagen.flow_from_directory('dataset',target_size=(64,64),class_mode="binarty")


classifier=Sequntial()
classifier.add(Conv2D(filters=32,kernel_size=(3,3),input_shape=[64,64,3],activation="relu"))
classifier.add(MaxPooling2D(pool_size=(2,2),strides=2))

classifier.add(Conv2D(32,(3,3),activation="relu"))
classifier.add(MaxPooling2D(pool_size=(2,2)))

classifier.add(Flatten())

classifier.add(Dense(units=128,activation="relu"))
classifier.add(Dense(units=32,activation="relu"))
classifier.add(Dense(units=8,activation="relu"))
classifier.add(Dense(units=1,activation="sigmoid"))
classifier.compile(optimizer="adam",loss="binary_crossentropy",metrics=[''accuracy](
classifier.fit_generator(training_set,epoch=2,validation_data=test_set)

import numpy as np
from tensorflow.keras.preprocessing import image
test_image=image.load_img("file",target_size=(64,64))
test_image=image.img_to_array(test_image)
test_image=np.expand_dims(test_image,axis=0)
result=classifier.predict(test_image)
print(training_set.class_indices)
print(result[0][0])
